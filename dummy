 const { data: images } = useQuery({ queryKey: ['images'], queryFn: fetchImages });
  async function fetchImages(): Promise<string[] | undefined> {
    try {
      const res = await axios.get<string[]>(`workspaces/images?project_id=${projectName}`);
      const buildImages: string[] = [];
      Object.entries<[string, string[]]>(res['images']).forEach(([key, values]) => {
        values.forEach(value => buildImages.push(`${key}:${value}`));
      });
      return buildImages;
    } catch (err: any) {
      setAlert(err.message || 'Failed to fetch images, please try again.');
    }
  }

<Box component="div" display="flex" justifyContent="center" marginBottom="16px" height="fit-content">
            <Box component="div" width="35%" display="flex" alignItems="center">
              Select image for your new workspace
            </Box>
            <Box component="div" width="45%">
              <TextField
                select
                fullWidth
                id="image"
                name="image"
                label="Select Image"
                onChange={formik.handleChange}
                onBlur={formik.handleBlur}
                value={formik.values.image}
                error={formik.touched.image && formik.errors.image ? true : false}
              >
                {images?.map(image => (
                  <MenuItem value={image} key={image}>
                    {image}
                  </MenuItem>
                ))}
              </TextField>
            </Box>
          </Box>



{
    "images": {
        "Default": [
            "asp",
            "vnc",
            "vnc2"
        ],
         "Custom": [
            "atpgui123",
            "atpfroz11ide",
            "atpgui",
            "atpvscode",
            "v1",
            "gui",
            "mbv",
            "asp",
            "vnc",
            "vnc2"
        ]
    }
}
